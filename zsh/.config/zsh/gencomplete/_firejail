#compdef firejail

# zsh completions for 'firejail'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
    '--bandwidth[- set  bandwidth  limits  for  the sandbox identified]'
    '--bind[1,dirname2 - mount-bind dirname1 on top of dirname2.]'
    '--bind[1,filename2 - mount-bind filename1 on top of filename2.]'
    '--blacklist[- blacklist directory or file.]'
    '-c[- execute command and exit.]'
    '--caps[- enable default Linux capabilities filter.]'
    '--caps[.drop=all - drop all capabilities.]'
    '--caps[.drop=capability,capability - blacklist capabilities filter.]'
    '--caps[.keep=capability,capability - whitelist capabilities filter.]'
    '--caps[.print=name|pid - print the caps filter for the sandbox identified]'
    '--cgroup[- place the sandbox in the specified control group.]'
    '--chroot[- chroot into directory.]'
    '--cpu[cpu-number - set cpu affinity.]'
    '--cpu[.print=name|pid - print the cup in use by the sandbox identified]'
    '--csh[- use /bin/csh as default shell.]'
    '--debug[- print sandbox debug messages.]'
    '--debug-blacklists[- debug blacklisting.]'
    '--debug-caps[- print all recognized capabilities in the current Firejail]'
    '--debug-check-filename[- debug filename checking.]'
    '--debug-errnos[- print all recognized error numbers in the current Firejail]'
    '--debug-protocols[- print all recognized protocols in the current Firejail]'
    '--debug-syscalls[- print all recognized system calls in the current Firejail]'
    '--debug-whitelists[- debug whitelisting.]'
    '--defaultgw[- use this address as default gateway in the new network]'
    '--dns[- set a DNS server for the sandbox. Up to three DNS servers]'
    '--dns[.print=name|pid - print DNS configuration for the sandbox identified]'
    '--env[value - set environment variable in the new sandbox.]'
    '--fs[.print=name|pid - print the filesystem log for the sandbox identified]'
    '--get[filename - get a file from sandbox container.]'
    '--help[-? - this help screen.]'
    '--hostname[- set sandbox hostname.]'
    '--ignore[- ignore command in profile files.]'
    '--interface[- move interface in a new network namespace. Up to four]'
    '--interface[can be specified.]'
    '--ip[- set interface IP address.]'
    '--ip[- no IP address and no default gateway address are configured]'
    '--ip6[- set interface IPv6 address.]'
    '--iprange[address - configure an IP address in this range.]'
    '--ipc-namespace[- enable a new IPC namespace if the sandbox was started as]'
    '--join[- join the sandbox identified by name or PID.]'
    '--join-filesystem[- join the mount namespace of the sandbox]'
    '--join-network[- join the network namespace of the sandbox]'
    '--list[- list all sandboxes.]'
    '--ls[dir_or_filename - list files in sandbox container.]'
    '--mac[- set interface MAC address.]'
    '--mtu[- set interface MTU.]'
    '--name[- set sandbox name.]'
    '--net[- enable network namespaces and connect to this bridge]'
    '--net[- enable network namespaces and connect to this]'
    '--net[can be defined.]'
    '--net[- enable a new, unconnected network namespace.]'
    '--netfilter[- enable the default client network filter in the new]'
    '--netfilter[- enable the network filter specified by]'
    '--netfilter6[- enable the IPv6 network filter specified by]'
    '--netstats[- monitor network statistics for sandboxes creating a new]'
    '--nice[- set nice value]'
    '--noblacklist[- disable blacklist for directory or]'
    '--nogroups[- disable supplementary groups. Without this option]'
    '--noprofile[- do not use a profile.  Profile priority is use the one]'
    '--noroot[- install a user namespace with a single user - the current]'
    '--nonewprivs[- sets the NO_NEW_PRIVS prctl - the child processes]'
    '--nosound[- disable sound system.]'
    '--output[- stdout logging and log rotation. Copy stdout and stderr]'
    '--overlay[- mount a filesystem overlay on top of the current filesystem.]'
    '--overlay-tmpfs[- mount a filesystem overlay on top of the current]'
    '--private[- mount new /root and /home/user directories in temporary]'
    '--private[- use directory as user home.]'
    '--private-bin[file - build a new /bin in a temporary filesystem]'
    '--private-dev[- create a new /dev directory. Only dri, null, full, zero]'
    '--private-etc[directory - build a new /etc in a temporary]'
    '--private-tmp[- mount a tmpfs on top of /tmp directory]'
    '--profile[- use a custom profile.]'
    '--profile-path[- use this directory to look for profile files.]'
    '--protocol[protocol,protocol - enable protocol filter.]'
    '--protocol[.print=name|pid - print the protocol filter for the sandbox]'
    '--quiet[- turn off Firejails output.]'
    '--read-only[- set directory or file read-only..]'
    '--rlimit-fsize[- set the maximum file size that can be created]'
    '--rlimit-nofile[- set the maximum number of files that can be]'
    '--rlimit-nproc[- set the maximum number of processes that can be]'
    '--rlimit-sigpending[- set the maximum number of pending signals]'
    '--read-write[- set directory or file read-write..]'
    '--scan[- ARP-scan all the networks from inside a network namespace.]'
    '--seccomp[- enable seccomp filter and apply the default blacklist.]'
    '--seccomp[syscall,syscall - enable seccomp filter, blacklist the]'
    '--seccomp[.drop=syscall,syscall,syscall - enable seccomp filter, and]'
    '--seccomp[.keep=syscall,syscall,syscall - enable seccomp filter, and]'
    '--seccomp[.<errno>=syscall,syscall,syscall - enable seccomp filter, and]'
    '--seccomp[.print=name|pid - print the seccomp filter for the sandbox]'
    '--shell[- run the program directly without a user shell.]'
    '--shell[- set default user shell.]'
    '--shutdown[- shutdown the sandbox identified by name or PID.]'
    '--tmpfs[- mount a tmpfs filesystem on directory dirname.]'
    '--top[- monitor the most CPU-intensive sandboxes.]'
    '--trace[- trace open, access and connect system calls.]'
    '--tracelog[- add a syslog message for every access to files or]'
    '--tree[- print a tree of all sandboxed processes.]'
    '--user[- switch the user before starting the sandbox.]'
    '--version[- print program version and exit.]'
    '--whitelist[- whitelist directory or file.]'
    '--writable-etc[- /etc directory is mounted read-write.]'
    '--writable-var[- /var directory is mounted read-write.]'
    '--x11[- enable X11 server. The software checks first if Xpra is installed]'
    '--x11[- enable Xpra X11 server.]'
    '--x11[- enable Xephyr X11 server. The window size is 800x600.]'
    '--zsh[- use /usr/bin/zsh as default shell.]'
    '*:filename:_files'
)

_arguments -s $arguments
