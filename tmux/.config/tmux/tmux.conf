

set -g focus-events on
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key -T copy-mode-vi C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -T copy-mode-vi C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -T copy-mode-vi C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -T copy-mode-vi C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -T copy-mode-vi C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
#bind-key \ select-pane -l

bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

bind-key -n M-Left run-shell 'tmux list-windows | head -n 1 | grep -q active || tmux swap-window -t -1'
bind-key -n M-Right run-shell 'tmux list-windows | tail -n 1 | grep -q active || tmux swap-window -t +1'


#bind-key F7  new-window 'urxvtBrightBackground.sh'

# bind v send-keys -R; display "Cleared";

# when split window keep current working directory

bind 's' split-window -c '#{pane_current_path}'
# bind v split-window -hc '#{pane_current_path}'
bind '"' split-window -c '#{pane_current_path}'
bind % split-window -hc '#{pane_current_path}'

# bind-key -n M-c kill-pane \; select-layout
# bind-key -n M-n split-window \; select-layout

bind c new-window
setw -g aggressive-resize on

## set the default TERM
# set -g default-terminal screen
## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# Set the prefix to Alt-A
    set-option -g   prefix M-a
    bind-key M-a    send-prefix
    unbind C-b
unbind p
bind N previous-window

set-option -g repeat-time 0


# Set status bar
    set -g status-bg black
    set -g status-fg white

# Highlight active window

    set-window-option -g window-status-current-format '#[bg=red]#I:#S'
    # set-window-option -g window-status-format '#I #[fg=red] #S'

#set window notifications
    set -g monitor-activity on
    set -g visual-activity on

# Automatically set window title
    set -g automatic-rename

set -g base-index 1
set -sg escape-time 1
set-option -g display-time 3000

set -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection

#mouse
set-option -g mouse on
#bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
#bind -n WheelDownPane select-pane -t= \; send-keys -M
    # set-option -g mouse-select-pane on
    # set-option -g mouse-resize-pane on
    # set-option -g mouse-select-window on
    # set-window-option -g mode-mouse on

# nvim cursor change to bar insert mode. see  man 1 nvim  /tmux
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# override restore ?
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set-window-option -g alternate-screen on
set-option -g history-limit 10000


# Reload key
bind r source-file ~/.config/tmux/tmux.conf # display "Config reloaded...";

#vim movments
    # bind h select-pane -L
    # bind j select-pane -D
    # bind k select-pane -U
    # bind l select-pane -R

bind -n Pageup copy-mode -u
set -g default-command "${SHELL}"
bind-key M-a last-window

bind C-l send-keys 'C-l'


#  run-shell ~/.config/tmux/tmux-prefix-highlight/prefix_highlight.tmux
#  set -g status-right '#{prefix_highlight}A | %a %Y-%m-%d %H:%M'
#  set -g @prefix_highlight_fg 'red'
#  set -g @prefix_highlight_bg 'blue'

# run-shell ~/.tmux/tmux-fingers/tmux-fingers.tmux
#
# set -g @fingers-key F

# run-shell ~/.config/tmux/yank.tmux
# set -g @yank_selection 'clipboard' # or 'secondary' or 'clipboard'
