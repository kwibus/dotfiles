


# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# bind v send-keys -R; display "Cleared";

# when split window keep current working directory 
bind '"' split-window -c '#{pane_current_path}' 
bind % split-window -hc '#{pane_current_path}' 

# bind-key -n M-c kill-pane \; select-layout
# bind-key -n M-n split-window \; select-layout

bind c new-window 
setw -g aggressive-resize on

## set the default TERM
set -g default-terminal screen
## update the TERM variable of terminal emulator when creating a new session or attaching a existing session
set -g update-environment 'DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM'
## determine if we should enable 256-colour support
if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# Set the prefix to Alt-A
    set-option -g   prefix M-a
    bind-key M-a    send-prefix
    unbind C-b

set-option -g repeat-time 0


# Set status bar
    set -g status-bg black
    set -g status-fg white

# Highlight active window
    set-window-option -g window-status-current-bg red

#set window notifications
    set -g monitor-activity on
    set -g visual-activity on

# Automatically set window title
    set -g automatic-rename

set -g base-index 1
set -sg escape-time 1
set-option -g display-time 3000

bind -t vi-copy 'v' begin-selection
bind -t vi-copy y begin-selection  # run "tmux copy-selection ;tmux display-message yank ;tmux show-buffer | xsel -i -b -p -s "
bind y  run "tmux display-message halllo;tmux show-buffer | xsel -i -b -p -s "
bind -t vi-copy C-v rectangle-toggle
#mouse
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
    # set-option -g mouse-select-pane on
    # set-option -g mouse-resize-pane on
    # set-option -g mouse-select-window on
    # set-window-option -g mode-mouse on

# nvim cursor change to bar insert mode. see  man 1 nvim  /tmux
set -ga terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# override restore ?
# set -g terminal-overrides 'xterm*:smcup@:rmcup@'

set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
set-window-option -g alternate-screen on
set-option -g history-limit 10000

#CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
#bind C-c run "tmux show-buffer | xsel -i -b"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind  p  run "tmux set-buffer -- \"$(xsel -o -b)\"; tmux paste-buffer"

# Reload key
bind r source-file ~/.tmux.conf #;run tmux  display-message "Config reloaded...";

#vim movments
    # bind h select-pane -L
    # bind j select-pane -D
    # bind k select-pane -U
    # bind l select-pane -R

bind -n Pageup copy-mode -u
set -g default-command "${SHELL}"
bind-key M-a last-window

bind C-l send-keys 'C-l'


# run-shell ~/.tmux/tmux-prefix-highlight/prefix_highlight.tmux
# set -g status-right '#{prefix_highlight} | %a %Y-%m-%d %H:%M'
# set -g @prefix_highlight_fg 'white'
# set -g @prefix_highlight_bg 'blue'

# run-shell ~/.tmux/tmux-fingers/tmux-fingers.tmux
#
# set -g @fingers-key F
